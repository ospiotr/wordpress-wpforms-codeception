<?php

namespace Tests\Acceptance;

use Tests\Page\AdminPage;
use Tests\Page\PostEditorPage;
use Tests\Page\PostsListPage;
use Tests\Page\FrontendPostPage;
use Tests\Util\PageUtils;

class PublishAndVerifyPostCest
{
    protected $postId;
    protected $postUrl;
    protected $postTitle;

    public function PublishAndVerifyPostCest($I)
    {
        $adminPage = new AdminPage($I);
        $postEditorPage = new PostEditorPage($I);
        $postsListPage = new PostsListPage($I);
        $frontendPostPage = new FrontendPostPage($I);

        $I->loginAsAdmin();
        $adminPage->goToAdminAddNewPost();

        // Disable annoying Gutenberg Welcome Guide modal window
        $postEditorPage->disableGutenbergModal();

        $uniqueId = uniqid();
        $this->postTitle = "Test Post Title " . $uniqueId;

        $postContent = "This post is autogenerated. Technical assignment done for Awesome Motive dev team by Piotr.";

        $postEditorPage->enterPostTitle($this->postTitle);
        $postEditorPage->enterPostContent($postContent);

        $postEditorPage->publishPost();
        $this->postUrl = $postEditorPage->getPostUrl();

        $I->amGoingTo('Check if the published post is visible on the Posts screen in admin area');
        $this->postId = PageUtils::getPostIdOnEditScreen($I);

        $adminPage->goToAdminAllPosts();
        $postsListPage->seePostOnTheList($this->postId, $this->postTitle);

        $I->amGoingTo('View the published post');
        $I->amOnUrl($this->postUrl);
        $frontendPostPage->seePublishedPostTitleContentFrontend($this->postTitle, $postContent);
    }

    function _after($I)
    {
        $I->amGoingTo('Move the test data to Trash');

        if ($this->postId && $this->postTitle) {
            $adminPage = new AdminPage($I);
            $postsListPage = new PostsListPage($I);

            $adminPage->goToAdminAllPosts();
            $postsListPage->deletePostOnTheList($this->postId, $this->postTitle);
        }
    }
}